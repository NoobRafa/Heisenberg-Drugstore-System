/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poo.telas;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.poo.dao.ClienteDAO;
import com.poo.entidades.Cliente;
import com.poo.tela.models.ClienteTableModel;
import com.poo.tela.models.VendaTableModel;
import com.poo.util.JpaUtil;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Rafael Vieira
 */
public class RelatorioCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form RelatorioCliente
     */
    private static RelatorioCliente relatorioCliente;

    private ClienteDAO daoCliente = new ClienteDAO(JpaUtil.getEM());
    private List<Cliente> listaClientes = daoCliente.listarClientesCompras();
    private ClienteTableModel modeloCliente = new ClienteTableModel(listaClientes);
    private Cliente cliente;

    private RelatorioCliente() {
        initComponents();
    }

    public static synchronized RelatorioCliente getInstance() {
        if (relatorioCliente == null) {
            relatorioCliente = new RelatorioCliente();
        }

        return relatorioCliente;

    }

    @Override
    public void dispose() {
        cliente = null;
        relatorioCliente = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    private void limpar(List<JComponent> unit) {
        for (JComponent jComponent : unit) {
            if (jComponent instanceof JTextField) {
                ((JTextField) jComponent).setText(null);
            }

            if (jComponent instanceof JFormattedTextField) {
                ((JFormattedTextField) jComponent).setValue(null);
                ((JFormattedTextField) jComponent).setText(null);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        nomeCliente = new javax.swing.JTextField();
        buscarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        gerarRelatorio = new javax.swing.JButton();

        setClosable(true);
        setTitle("Relatório de Clientes");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("CLIENTES: ");

        buscarCliente.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buscarCliente.setText("BUSCAR");
        buscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClienteActionPerformed(evt);
            }
        });

        tabelaCliente.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaCliente.setModel(modeloCliente);
        tabelaCliente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabelaCliente);

        gerarRelatorio.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        gerarRelatorio.setText("GERAR RELATÓRIO EM PDF");
        gerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 232, 232)
                        .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarCliente))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gerarRelatorio)
                .addGap(227, 227, 227))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarCliente)
                    .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(gerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClienteActionPerformed
        // TODO add your handling code here:
        if (!nomeCliente.getText().isEmpty()) {
            List<Cliente> aux = daoCliente.listarCliente(nomeCliente.getText());

            if (!aux.isEmpty()) {
                modeloCliente = new ClienteTableModel(aux);
                tabelaCliente.setModel(modeloCliente);
            } else {
                JOptionPane.showMessageDialog(null, "Cliente " + nomeCliente.getText() + " não foi encontrado!");
                nomeCliente.setText(null);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verifique o campo antes de tentar realizar uma busca!");
        }

    }//GEN-LAST:event_buscarClienteActionPerformed

    private void gerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarRelatorioActionPerformed
        // TODO add your handling code here:
        if (tabelaCliente.getSelectedRow() != -1) {

            cliente = modeloCliente.getRow(tabelaCliente.getSelectedRow());

            Font fonteTitulo = new Font(Font.FontFamily.COURIER, 20, Font.BOLD);
            Font corpoTexto = new Font(Font.FontFamily.COURIER, 14, Font.BOLD);

            try {
                Document documento = new Document();

                File arquivo = new File("RelatorioDeCompras- " + cliente.getNome() + ".pdf");

                FileOutputStream saidaArquivo = new FileOutputStream(arquivo);

                PdfWriter.getInstance(documento, saidaArquivo);

                documento.open();
                VendaTableModel modelo = new VendaTableModel(cliente.getCompras());
                Phrase frase = new Phrase("HEISENBERG'S DRUGSTORE", fonteTitulo);
                Paragraph paragrafo = new Paragraph(frase);
                paragrafo.add(Chunk.NEWLINE);
                paragrafo.add(new Phrase("Relatório de Compras do(a) cliente " + cliente.getNome(), corpoTexto));
                paragrafo.setAlignment(Element.ALIGN_CENTER);

                documento.add(paragrafo);

                documento.add(Chunk.NEWLINE);

                PdfPTable tabela = new PdfPTable(modelo.getColumnCount());

                for (int i = 0; i < modelo.getColumnCount(); i++) {
                    tabela.addCell(modelo.getColumnName(i) + " ");
                }

                for (int i = 0; i < modelo.getRowCount(); i++) {
                    for (int j = 0; j < modelo.getColumnCount(); j++) {
                        tabela.addCell(modelo.getValueAt(i, j).toString());
                    }
                }

                documento.add(tabela);

                documento.add(new Paragraph(new Phrase("Say my name! - Walter White", corpoTexto)));
                documento.close();

                JOptionPane.showMessageDialog(null, "Relatório criado com sucesso! ");
                nomeCliente.setText(null);
                dispose();

            } catch (FileNotFoundException | DocumentException ex) {
                Logger.getLogger(RelatorioCliente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(RelatorioCliente.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione primeiro um cliente para então gerar um relatório!");
        }
    }//GEN-LAST:event_gerarRelatorioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarCliente;
    private javax.swing.JButton gerarRelatorio;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeCliente;
    private javax.swing.JTable tabelaCliente;
    // End of variables declaration//GEN-END:variables
}
